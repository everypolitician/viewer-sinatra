<div class="hero hero--jazzy">
    <div class="container">
        <h1>Style guide</h1>
        <p class="subtitle">for EveryPolitician contributors</p>
    </div>
</div>

<div class="page-section">
    <div class="container">

        <div class="row">

            <div class="column-one-quarter">
                <ul class="unstyled-list">
                    <li><a href="#centred-content">Centred content</a></li>
                    <li><a href="#vertical-spacing">Vertical spacing</a></li>
                    <li><a href="#hero-sections">Hero sections</a></li>
                    <li><a href="#buttons">Buttons</a></li>
                    <li><a href="#grids">Grids of things</a></li>
                    <li><a href="#avatar-units">Avatar units</a></li>
                    <li><a href="#person-cards">Person cards</a></li>
                    <li><a href="#basic-lists">Unstyled and inline lists</a></li>
                    <li><a href="#alerts">Alerts</a></li>
                    <li><a href="#table-headers">Fixed table headers</a></li>
                    <li><a href="#table-sorting">Sortable tables</a></li>
                </ul>
            </div>

            <div class="column-three-quarters">

                <h2 id="centred-content">Centred content</h2>

                <p>Use a class of <code>.container</code> to centre a block of content and stop it touching the sides of the window.</p>

                <pre>
&lt;div class="container"&gt;
    &lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;</pre>

                <p>To literally centre the text (eg: for a centred heading), use <code>.text-center</code>:</p>

                <pre>
&lt;div class="text-center"&gt;
    &lt;h2&gt;This heading will be centred&lt;/h2&gt;
&lt;/div&gt;</pre>

                <hr>

                <h2 id="vertical-spacing">Vertical spacing</h2>

                <p>You will usually want to nest your <code>.container</code> blocks inside a <code>.page-content</code> block, to provide vertical spacing between different sections of the page.</p>

                <pre>
&lt;div class="page-section"&gt;
    &lt;div class="container"&gt;
        &lt;p&gt;…&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;</pre>

                <p>Add a class of <code>page-section--grey</code> or <code>page-section--black</code> to give a page section more emphasis, eg:</p>

                <pre>
&lt;div class="page-section page-section--grey"&gt;
    &lt;div class="container"&gt;
        &lt;p&gt;…&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;</pre>

                <hr>

                <h2 id="hero-sections">Hero sections</h2>

                <p>Use a <code>.hero</code> block to create a centred, impactful page heading:</p>

                <pre>
&lt;div class="hero"&gt;
    &lt;div class="container"&gt;
        &lt;p&gt;…&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;</pre>

                <p>Add a class of <code>hero--jazzy</code> to make an eye-catching section (like the one at the top of this page) that shifts background colour on modern web browsers:</p>

                <pre>
&lt;div class="hero hero--jazzy"&gt;
    &lt;div class="container"&gt;
        &lt;p&gt;…&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;</pre>

                <p><strong>Note:</strong> Hero blocks should not be nested inside <code>page-section</code> blocks. The Hero has its own vertical padding.</p>

                <hr>

                <h1 id="buttons">Buttons</h1>

                <p>Use the <code>.button</code> class to trigger basic styling, then add <code>button--secondary</code>, <code>button--tertiary</code>, or <code>button--quarternary</code> to de-emphasise less important actions.</p>

                <table>
                  <tr>
                    <td><code>&lt;a class="button"&gt;Save changes&lt;/a&gt;</code></td>
                    <td><a class="button" href="#">Save changes</a></td>
                  </tr>
                  <tr>
                    <td><code>&lt;a class="button button--secondary"&gt;Contact this MP&lt;/a&gt;</code></td>
                    <td><a class="button button--secondary" href="#">Contact this MP</a></td>
                  </tr>
                  <tr>
                    <td><code>&lt;a class="button button--tertiary"&gt;Cancel&lt;/a&gt;</code></td>
                    <td><a class="button button--tertiary" href="#">Cancel</a></td>
                  </tr>
                  <tr>
                    <td><code>&lt;a class="button button--quarternary"&gt;Show more&lt;/a&gt;</code></td>
                    <td><a class="button button--quarternary" href="#">Show more</a></td>
                  </tr>
                </table>

                <p>You can combine buttons into groups by putting them inside a <code>.button-group</code>:</p>

                <div class="text-center">
                    <div class="button-group">
                        <a class="button button--quarternary" href="#">Sort by date</a>
                        <a class="button button--quarternary" href="#">Sort by name</a>
                        <a class="button button--quarternary" href="#">Sort by location</a>
                    </div>
                </div>

                <pre>
&lt;div class="text-center"&gt;
    &lt;div class="button-group"&gt;
        &lt;a class="button button--quarternary"&gt;Sort by date&lt;/a&gt;
        &lt;a class="button button--quarternary"&gt;Sort by name&lt;/a&gt;
        &lt;a class="button button--quarternary"&gt;Sort by location&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;</pre>

                <p>Buttons will be stacked vertically on narrow screens, and horizontally on larger screens.</p>

                <hr>

                <h1 id="grids">Grids of things</h1>

                <p>The <code>.grid-list</code> is ideal for displaying lists of people, places, or things (especially when combined with <code>.avatar-unit</code>):</p>

                <ul class="grid-list">
                  <% @names = [ 'Tony Stark', 'Obadiah Stane', 'Pepper Potts', 'Justin Hammer', 'Nick Fury', 'Jim Rhodes' ] %>
                  <% @names.each do |name| %>
                    <li>
                        <a class="avatar-unit" href="#">
                            <span class="avatar"><i class="fa fa-user"></i></span>
                            <h3><%= name %></h3>
                        </a>
                    </li>
                  <% end %>
                </ul>

                <pre>
&lt;ul class="grid-list"&gt;
    &lt;li&gt;
        &lt;a class="avatar-unit" href="#"&gt;
            &lt;span class="avatar"&gt;&lt;i class="fa fa-user"&gt;&lt;/i&gt;&lt;/span&gt;
            &lt;h3&gt;Tony Stark&lt;/h3&gt;
        &lt;/a&gt;
    &lt;/li&gt;
    …
&lt;/ul&gt;</pre>

                <p>List items will break onto as many columns as can comfortably fit on screen, and will wrap onto as many rows as required.</p>

                <p>List items will line up along their top edges. If you’d prefer them to line up along their centres (useful for multi-line <code>.avatar-unit</code>s) add a class of <code>grid-list--vertically-center</code> to your Grid list element.</p>

                <p><strong>Note:</strong> List items will be displayed in a single full-width column on very old browsers, and IE9 and below. <a href="http://caniuse.com/#search=flex">Show full browser compatibility table.</a></p>

                <hr>

                <h1 id="avatar-units">Avatar units</h1>

                <p>Avatar units provide a simple way of displaying the name of a thing along with an icon representing it and, optionally, some extra information like a date or location:</p>

                <a class="avatar-unit" href="#">
                    <span class="avatar"><i class="fa fa-user"></i></span>
                    <h3>Tony Stark</h3>
                    <p>CEO, Stark Industries</p>
                </a>

                <pre>
&lt;a class="avatar-unit" href="#"&gt;
    &lt;span class="avatar"&gt;&lt;i class="fa fa-user"&gt;&lt;/i&gt;&lt;/span&gt;
    &lt;h3&gt;Tony Stark&lt;/h3&gt;
    &lt;p&gt;CEO, Stark Industries&lt;/p&gt;
&lt;/a&gt;</pre>

                <p>Avatar units must contain a <code>&lt;span class="avatar"&gt;</code> element, but all other content is optional.</p>

                <p>You can change the icon displayed by replacing <code>&lt;i class="fa fa-user"&gt;</code> with one of the icon codes from the <a href="http://fortawesome.github.io/Font-Awesome/icons/">Font Awesome docs</a>.</p>

                <hr>

                <h1 id="person-cards">Person cards</h1>

                <p>Person cards are a logical step up from Avatar units, once you want to display more information about a person than just their name and single paragraph of text.</p>

                <div class="person-card">

                </div>

                <pre>
                    example
                </pre>

                <hr>

                <h1 id="basic-lists">Unstyled and inline lists</h1>

                <p>Add a class of <code>unstyled-list</code> to a list element to remove the bullets and margin.</p>

                <p>Or add a class of <code>inline-list</code> to collapse all the list items onto a single line, so the list reads like a sentence. (Useful for lists of links in places like nav bars and footers.)</p>

                <hr>

                <h1 id="alerts">Alerts</h1>

                <p>Use a class of <code>alert</code> to get the base style, plus either <code>alert--success</code> or <code>alert--error</code> to add colour.</p>

                <pre>
&lt;div class="alert alert--success"&gt;
    &lt;p&gt;&lt;strong&gt;Candidate added!&lt;/strong&gt; Thanks for contributing to EveryPolitician.&lt;/p&gt;
&lt;/div&gt;

&lt;div class="alert alert--error"&gt;
    &lt;p&gt;&lt;strong&gt;.Something went wrong&lt;/strong&gt; Try reloading your browser.&lt;/p&gt;
&lt;/div&gt;</pre>

                <div class="alert alert--success">
                    <p><strong>Candidate added!</strong> Thanks for contributing to EveryPolitician.</p>
                </div>

                <div class="alert alert--error">
                    <p><strong>Something went wrong.</strong> Try reloading your browser.</p>
                </div>

                <hr>

                <h1 id="table-headers">Fixed table headers</h1>

                <p>If you have a very long table, add a class of <code>js-fixed-thead</code> to the <code>&lt;thead&gt;</code> element, and it will automatically stick to the top of the window when the user scrolls down the page.</p>

                <pre>
&lt;table&gt;
  &lt;thead class="js-fixed-thead"&gt;
      &lt;tr&gt;
          &lt;th&gt;Name&lt;/th&gt;
          &lt;th&gt;Group&lt;/th&gt;
          &lt;th&gt;Area&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tr&gt;
    …
  &lt;/tr&gt;
&lt;/table&gt;</pre>

                <hr>

                <h1 id="table-sorting">Sortable tables</h1>

                <p>Add a class of <code>js-sortable</code> to your <code>&lt;table&gt;</code> element, and it will become sortable. The first time a user clicks one of table’s header cells, that column will sort from A–Z. The second time, it’ll sort Z–A. And the third time, it’ll reset to its original sort order.</p>

                <table class="js-sortable">
                  <thead>
                    <tr>
                      <th>Name</th>
                      <th>Organization</th>
                      <th>First appearance</th>
                    </tr>
                  </thead>
                  <tr>
                    <td>Tony Stark</td>
                    <td>Stark Industries</td>
                    <td>Tales of Suspense #39</td>
                  </tr>
                  <tr>
                    <td>Obadiah Stane</td>
                    <td>Stark Industries</td>
                    <td>Iron Man #163</td>
                  </tr>
                  <tr>
                    <td>Justin Hammer</td>
                    <td>Hammer Industries</td>
                    <td>Iron Man #120</td>
                  </tr>
                  <tr>
                    <td>Nick Fury</td>
                    <td>S.H.I.E.L.D.</td>
                    <td>Fantastic Four #21</td>
                  </tr>
                </table>

                <pre>
&lt;table class="js-sortable"&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Name&lt;/th&gt;
          &lt;th&gt;Group&lt;/th&gt;
          &lt;th&gt;Area&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tr&gt;
    …
  &lt;/tr&gt;
&lt;/table&gt;</pre>

            <p><strong>Note:</strong> Make sure your table headers cells are correctly marked up as <code>&lt;th&gt;</code> elements inside a <code>&lt;thead&gt;</code>, as above.</p>

            </div>
        </div>

    </div>
</div>
